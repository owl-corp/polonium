on:
  workflow_call

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Python Dependencies
        uses: HassanAbouelela/actions/setup-python@setup-python_v1.3.2
        with:
          # Set dev=true to install flake8 extensions, which are dev dependencies
          dev: true
          python_version: '3.11'

      - name: Ensure main-requirements.txt is up to date
        shell: bash
        run: |
          echo "::group::Export Poetry"
          poetry export -f requirements.txt --output temp-requirements.txt -vvv
          echo "::endgroup::"

          if ! cmp -s "main-requirements.txt" "temp-requirements.txt"; then
            echo "::error file=main-requirements.txt,title=Requirements out of date!::Run 'poetry export -f requirements.txt --output main-requirements.txt'"
            exit 1
          fi

      # We will not run `flake8` here, as we will use a separate flake8
      # action. As pre-commit does not support user installs, we set
      # PIP_USER=0 to not do a user install.
      - name: Run pre-commit hooks
        run: SKIP=flake8 pre-commit run --all-files

      # Run flake8 and have it format the linting errors in the format of
      # the GitHub Workflow command to register error annotations. This
      # means that our flake8 output is automatically added as an error
      # annotation to both the run result and in the "Files" tab of a
      # pull request.
      #
      # Format used:
      # ::error file={filename},line={line},col={col}::{message}
      - name: Run flake8
        run: "flake8 \
        --format='::error file=%(path)s,line=%(row)d,col=%(col)d::\
        [flake8] %(code)s: %(text)s'"
